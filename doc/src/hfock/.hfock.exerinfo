
# Information about all exercises in the file hfock.do.txt.
# The information can be loaded into a Python list of dicts by
#
# f = open('.hfock.exerinfo', 'r')
# exer = eval(f.read())
#
[{'answer': '',
  'chapter_exercise': None,
  'chapter_no': None,
  'chapter_title': None,
  'chapter_type': None,
  'closing_remarks': '',
  'file': None,
  'heading': '=====',
  'hints': [],
  'keywords': None,
  'label': None,
  'no': 1,
  'solution': '',
  'solution_file': None,
  'subex': [{'answer': '',
             'file': None,
             'hints': [],
             'solution': '',
             'text': 'Show that the new basis is orthonormal.'},
            {'answer': '',
             'file': None,
             'hints': [],
             'solution': '',
             'text': 'Show that the new Slater determinant constructed from the new single-particle wave functions can be\nwritten as the determinant based on the previous basis and the determinant of the matrix $C$.'},
            {'aftertext': '\n\n\n',
             'answer': '',
             'file': None,
             'hints': ['Use the fact that $C$ is a unitary matrix.'],
             'solution': '',
             'text': 'Show that the old and the new Slater determinants are equal up to a complex constant with absolute value unity.'}],
  'text': 'Consider a Slater determinant built up of single-particle orbitals $\\psi_{\\lambda}$, \nwith $\\lambda = 1,2,\\dots,N$.\n\nThe unitary transformation\n!bt\n\\[\n\\psi_a  = \\sum_{\\lambda} C_{a\\lambda}\\phi_{\\lambda},\n\\]\n\n!et\nbrings us into the new basis.  \nThe new basis has quantum numbers $a=1,2,\\dots,N$.',
  'title': 'Derivation of Hartree-Fock equations',
  'type': 'Exercise',
  'type_visible': True},
 {'answer': '',
  'chapter_exercise': None,
  'chapter_no': None,
  'chapter_title': None,
  'chapter_type': None,
  'closing_remarks': '',
  'file': None,
  'heading': '=====',
  'hints': [],
  'keywords': None,
  'label': None,
  'no': 2,
  'solution': '',
  'solution_file': None,
  'subex': [{'aftertext': '\n',
             'answer': '',
             'file': None,
             'hints': [],
             'solution': '',
             'text': 'Show that\n!bt\n\\[\n\\langle \\delta\\Phi_{0}|\\sum_{i=1}^{n}\\left\\{t(x_{i})+u(x_{i})\n\\right\\}+\\frac{1}{2}\n\\sum_{i\\neq j=1}^{n}v(x_{i},x_{j})|\\Phi_{0}\\rangle=\\sum_{i=1}^{n}\\langle \\delta\\psi_{\\alpha_{i}}|\\hat{t}+\\hat{u}\n|\\phi_{\\alpha_{i}}\\rangle\n+\\sum_{i\\neq j=1}^{n}\\left\\{\\langle\\delta\\psi_{\\alpha_{i}}\n\\psi_{\\alpha_{j}}|\\hat{v}|\\psi_{\\alpha_{i}}\\psi_{\\alpha_{j}}\\rangle-\n\\langle\\delta\\psi_{\\alpha_{i}}\\psi_{\\alpha_{j}}|\\hat{v}\n|\\psi_{\\alpha_{j}}\\psi_{\\alpha_{i}}\\rangle\\right\\}\n\\]\n\n!et'}],
  'text': 'Consider the  Slater  determinant\n!bt\n\\[\n\\Phi_{0}=\\frac{1}{\\sqrt{n!}}\\sum_{p}(-)^{p}P\n\\prod_{i=1}^{n}\\psi_{\\alpha_{i}}(x_{i}).\n\\]\n\n!et\nA small variation in this function is given by\n!bt\n\\[\n\\delta\\Phi_{0}=\\frac{1}{\\sqrt{n!}}\\sum_{p}(-)^{p}P\n\\psi_{\\alpha_{1}}(x_{1})\\psi_{\\alpha_{2}}(x_{2})\\dots\n\\psi_{\\alpha_{i-1}}(x_{i-1})(\\delta\\psi_{\\alpha_{i}}(x_{i}))\n\\psi_{\\alpha_{i+1}}(x_{i+1})\\dots\\psi_{\\alpha_{n}}(x_{n}).\n\\]\n\n!et',
  'title': 'Derivation of Hartree-Fock equations',
  'type': 'Exercise',
  'type_visible': True},
 {'answer': '',
  'chapter_exercise': None,
  'chapter_no': None,
  'chapter_title': None,
  'chapter_type': None,
  'closing_remarks': '',
  'file': None,
  'heading': '=====',
  'hints': [],
  'keywords': None,
  'label': None,
  'no': 3,
  'solution': '',
  'solution_file': None,
  'subex': [{'answer': '',
             'file': None,
             'hints': [],
             'solution': '',
             'text': 'We start with the helium atom and define our single-particle Hilbert space to consist of the single-particle orbits $1s$, $2s$ and $3s$, with their corresponding spin degeneracies.\n\nSet up the ansatz for the ground state $|c\\rangle = |\\Phi_0\\rangle$ in second \nquantization and define a table of single-particle states. Construct thereafter\nall possible one-particle-one-hole excitations  $|\\Phi_i^a\\rangle$ where $i$ refer to levels below the Fermi level (define this level) and $a$ refers to particle states. Define particles and holes. The Slater determinants have to be written in terms of the respective creation and annihilation operators.\nThe states you construct should all have total spin projection $M_S=0$. \nConstruct also all possible two-particle-two-hole states $|\\Phi_{ij}^{ab}\\rangle$  in a second quantization representation.'},
            {'answer': '',
             'file': None,
             'hints': [],
             'solution': '',
             'text': 'Define the Hamiltonian in a second-quantized form and use this to\ncompute the expectation value of the ground state (defining the so-called reference energy and later our Hartree-Fock functional) of the helium atom. \nShow that it is given by\n!bt\n\\[\n  E[\\Phi_0] = \\langle c | \\hat{H}| c \\rangle \n  = \\sum_{i} \\langle i | \\hat{h}_0 | i\\rangle+ \\frac{1}{2}\\sum_{ij}\\left[\\langle ij |\\frac{1}{r}|ij\\rangle-\\langle ij |\\frac{1}{r}|ji\\rangle\\right].\n\\]\n\n!et\nDefine properly the sums keeping in mind that the states $ij$ refer to all\nquantum numbers $nlm_lsm_s$.\nUse the values for the various matrix elements listed at the end of the project to find the value of $E$\nas function of $Z$ and compute $E$ as function of $Z$.'},
            {'answer': '',
             'file': None,
             'hints': [],
             'solution': '',
             'text': 'Hereafter we will limit ourselves to a system which now contains only one-particle-one-hole\nexcitations beyond the chosen state $|c\\rangle$.\nUsing the possible Slater determinants from exercise a) for the helium atom,   \nfind the expressions  (without inserting the explicit values for the matrix elements first) for\n!bt\n\\[\n\\langle c | \\hat{H}| \\Phi_i^a \\rangle,\n\\] \n\n!et\nand\n!bt\n\\[\n\\langle \\Phi_i^a | \\hat{H}| \\Phi_j^b \\rangle.\n\\]\n\n!et\nRepresent these expressions in a diagrammatic form, both for the onebody part and the two-body part of the Hamiltonian. \n \nInsert then the explicit values for the various matrix elements and \nset up the final Hamiltonian matrix and diagonalize it using for example\nOctave, Matlab, Python, C++ or Fortran as programming tools.\n\nCompare your results from those of exercise b) and comment your results. \nThe exact energy with our Hamiltonian is $-2.9037$ atomic units for helium. This value is also close to the experimental energy.'},
            {'answer': '',
             'file': None,
             'hints': [],
             'solution': '',
             'text': 'We repeat exercises b) and c) but now for the beryllium atom.\nDefine the ansatz for $|c\\rangle$ and limit yourself again to one-particle-one-hole excitations.   Compute the reference energy \n$\\langle c | \\hat{H}| c \\rangle $ as function of $Z$. Thereafter you will need to set up the appropriate Hamiltonian matrix\nwhich involves also one-particle-one-hole excitations. Diagonalize this matrix\nand compare your eigenvalues with  $\\langle c | \\hat{H}| c \\rangle$ as function of $Z$ and comment your results. \nThe exact energy with our Hamiltonian is $-14.6674$ atomic units for beryllium. This value is again close to the experimental energy.\\newline\\newline\\newline\nWith a given energy functional, we can perform at least two types of variational strategies\n o Vary the Slater determinant by changing the spatial part of the single-particle\nwave functions themselves. \n o Expand the single-particle functions in a known basis  and vary the coefficients, \nthat is, the new function single-particle wave function $|p\\rangle$ is written as a linear expansion in terms of a fixed basis $\\phi$ (harmonic oscillator, Laguerre polynomials etc)\n!bt\n\\[\n\\psi_p  = \\sum_{\\lambda} C_{p\\lambda}\\phi_{\\lambda},\n\\]\n\n!et\nBoth cases lead to a new Slater determinant which is related to the previous via  a unitary transformation.\nBelow we will set up the Hartree-Fock equations using the second option.  \nWe assume that our basis is still formed by the hydrogen-like wave functions. \nWe consider a Slater determinant built up of single-particle orbitals $\\phi_{\\lambda}$ where the indices $\\lambda$ refer to specific single-particle states.  As an example, you could think of the ground state ansatz for the Beryllium atom. \n\nThe unitary transformation\n\\[\n\\psi_p  = \\sum_{\\lambda} C_{p\\lambda}\\phi_{\\lambda},\n\\]\nbrings us into the new basis $\\psi$.  The new basis is orthonormal and $C$ is a unitary matrix.'},
            {'answer': '',
             'file': None,
             'hints': [],
             'solution': '',
             'text': 'Minimizing with respect to $C^*_{p\\alpha}$, remembering that $C^*_{p\\alpha}$ and $C_{p\\alpha}$ (and that the indices contain all single-particle quantum numbers including spin)\nare independent and defining\n!bt\n\\[\nh_{\\alpha\\gamma}^{HF}=\\langle \\alpha | h | \\gamma \\rangle+\n\\sum_{p}\\sum_{\\beta\\delta} C^*_{p\\beta}C_{p\\delta}\\langle \\alpha\\beta|V|\\gamma\\delta\\rangle_{AS},\n\\]\n\n!et\nshow that you can write the Hartree-Fock  equations as \n!bt\n\\[\n\\sum_{\\gamma}h_{\\alpha\\gamma}^{HF}C_{p\\gamma}=\\epsilon_p^{\\mathrm{HF}}C_{p\\alpha}.\n\\]\n\n!et\nExplain the meaning of the different terms and define the Hartree-Fock \noperator in second quantization. Write down its diagrammatic representation as well.  The greek letters refer to the wave functions in the original basis (in our case the hydrogen-like wave functions) while roman letters refer to the new basis.'},
            {'aftertext': '\n\nWe conclude by listing the matrix elements for the radial integrals to be used for the direct part and the exchange part. Note again that these integrals do not include spin. The nomenclature is $1=1s$, $2=2s$, and $3=3s$, with no\nspin degrees of freedom. \n\n|------------------------------------------------------------------------------------|\n| Element                                   |   |  Expression as function of charge $Z$ |\n|-----------------------------------------------------------------------------------------|\n| $\\langle 11\\vert \\hat{v} \\vert 11\\rangle$ | = | (5*Z)/8                                 |\n| $\\langle 11\\vert \\hat{v} \\vert 12\\rangle$ | = | (4096*Sqrt[2]*Z)/64827                  |\n| $\\langle 11\\vert \\hat{v} \\vert 13\\rangle$ | = | (1269*Sqrt[3]*Z)/50000                  |\n| $\\langle 11\\vert \\hat{v} \\vert 21\\rangle$ | = | (4096*Sqrt[2]*Z)/64827                  |\n| $\\langle 11\\vert \\hat{v} \\vert 22\\rangle$ | = | (16*Z)/729                              |\n| $\\langle 11\\vert \\hat{v} \\vert 23\\rangle$ | = | (110592*Sqrt[6]*Z)/24137569             |\n| $\\langle 11\\vert \\hat{v} \\vert 31\\rangle$ | = | (1269*Sqrt[3]*Z)/50000                  |\n| $\\langle 11\\vert \\hat{v} \\vert 32\\rangle$ | = | (110592*Sqrt[6]*Z)/24137569             |\n| $\\langle 11\\vert \\hat{v} \\vert 33\\rangle$ | = | (189*Z)/32768                           |\n| $\\langle 12\\vert \\hat{v} \\vert 11\\rangle$ | = | (4096*Sqrt[2]*Z)/64827                  |\n| $\\langle 12\\vert \\hat{v} \\vert 12\\rangle$ | = | (17*Z)/81                               |\n| $\\langle 12\\vert \\hat{v} \\vert 13\\rangle$ | = | (1555918848*Sqrt[6]*Z)/75429903125      |\n| $\\langle 12\\vert \\hat{v} \\vert 21\\rangle$ | = | (16*Z)/729                              |\n| $\\langle 12\\vert \\hat{v} \\vert 22\\rangle$ | = | (512*Sqrt[2]*Z)/84375                   |\n| $\\langle 12\\vert \\hat{v} \\vert 23\\rangle$ | = | (2160*Sqrt[3]*Z)/823543                 |\n| $\\langle 12\\vert \\hat{v} \\vert 31\\rangle$ | = | (110592*Sqrt[6]*Z)/24137569             |\n| $\\langle 12\\vert \\hat{v} \\vert 32\\rangle$ | = | (29943*Sqrt[3]*Z)/13176688              |\n| $\\langle 12\\vert \\hat{v} \\vert 33\\rangle$ | = | (1216512*Sqrt[2]*Z)/815730721           |\n| $\\langle 13\\vert \\hat{v} \\vert 11\\rangle$ | = | (1269*Sqrt[3]*Z)/50000                  |\n| $\\langle 13\\vert \\hat{v} \\vert 12\\rangle$ | = | (1555918848*Sqrt[6]*Z)/75429903125      |\n| $\\langle 13\\vert \\hat{v} \\vert 13\\rangle$ | = | (815*Z)/8192                            |\n| $\\langle 13\\vert \\hat{v} \\vert 21\\rangle$ | = | (110592*Sqrt[6]*Z)/24137569             |\n| $\\langle 13\\vert \\hat{v} \\vert 22\\rangle$ | = | (2160*Sqrt[3]*Z)/823543                 |\n| $\\langle 13\\vert \\hat{v} \\vert 23\\rangle$ | = | (37826560*Sqrt[2]*Z)/22024729467        |\n| $\\langle 13\\vert \\hat{v} \\vert 31\\rangle$ | = | (189*Z)/32768                           |\n| $\\langle 13\\vert \\hat{v} \\vert 32\\rangle$ | = | (1216512*Sqrt[2]*Z)/815730721           |\n| $\\langle 13\\vert \\hat{v} \\vert 33\\rangle$ | = | (617*Z)/(314928*Sqrt[3])                |\n| $\\langle 21\\vert \\hat{v} \\vert 11\\rangle$ | = | (4096*Sqrt[2]*Z)/64827                  |\n| $\\langle 21\\vert \\hat{v} \\vert 12\\rangle$ | = | (16*Z)/729                              |\n| $\\langle 21\\vert \\hat{v} \\vert 13\\rangle$ | = | (110592*Sqrt[6]*Z)/24137569             |\n| $\\langle 21\\vert \\hat{v} \\vert 21\\rangle$ | = | (17*Z)/81                               |\n| $\\langle 21\\vert \\hat{v} \\vert 22\\rangle$ | = | (512*Sqrt[2]*Z)/84375                   |\n| $\\langle 21\\vert \\hat{v} \\vert 23\\rangle$ | = | (29943*Sqrt[3]*Z)/13176688              |\n| $\\langle 21\\vert \\hat{v} \\vert 31\\rangle$ | = | (1555918848*Sqrt[6]*Z)/75429903125      |\n| $\\langle 21\\vert \\hat{v} \\vert 32\\rangle$ | = | (2160*Sqrt[3]*Z)/823543                 |\n| $\\langle 21\\vert \\hat{v} \\vert 33\\rangle$ | = | (1216512*Sqrt[2]*Z)/815730721           |\n| $\\langle 22\\vert \\hat{v} \\vert 11\\rangle$ | = | (16*Z)/729                              |\n| $\\langle 22\\vert \\hat{v} \\vert 12\\rangle$ | = | (512*Sqrt[2]*Z)/84375                   |\n| $\\langle 22\\vert \\hat{v} \\vert 13\\rangle$ | = | (2160*Sqrt[3]*Z)/823543                 |\n| $\\langle 22\\vert \\hat{v} \\vert 21\\rangle$ | = | (512*Sqrt[2]*Z)/84375                   |\n| $\\langle 22\\vert \\hat{v} \\vert 22\\rangle$ | = | (77*Z)/512                              |\n| $\\langle 22\\vert \\hat{v} \\vert 23\\rangle$ | = | (5870679552*Sqrt[6]*Z)/669871503125     |\n| $\\langle 22\\vert \\hat{v} \\vert 31\\rangle$ | = | (2160*Sqrt[3]*Z)/823543                 |\n| $\\langle 22\\vert \\hat{v} \\vert 32\\rangle$ | = | (5870679552*Sqrt[6]*Z)/669871503125     |\n| $\\langle 22\\vert \\hat{v} \\vert 33\\rangle$ | = | (73008*Z)/9765625                       |\n| $\\langle 23\\vert \\hat{v} \\vert 11\\rangle$ | = | (110592*Sqrt[6]*Z)/24137569             |\n| $\\langle 23\\vert \\hat{v} \\vert 12\\rangle$ | = | (2160*Sqrt[3]*Z)/823543                 |\n| $\\langle 23\\vert \\hat{v} \\vert 13\\rangle$ | = | (37826560*Sqrt[2]*Z)/22024729467        |\n| $\\langle 23\\vert \\hat{v} \\vert 21\\rangle$ | = | (29943*Sqrt[3]*Z)/13176688              |\n| $\\langle 23\\vert \\hat{v} \\vert 22\\rangle$ | = | (5870679552*Sqrt[6]*Z)/669871503125     |\n| $\\langle 23\\vert \\hat{v} \\vert 23\\rangle$ | = | (32857*Z)/390625                        |\n| $\\langle 23\\vert \\hat{v} \\vert 31\\rangle$ | = | (1216512*Sqrt[2]*Z)/815730721           |\n| $\\langle 23\\vert \\hat{v} \\vert 32\\rangle$ | = | (73008*Z)/9765625                       |\n| $\\langle 23\\vert \\hat{v} \\vert 33\\rangle$ | = | (6890942464*Sqrt[2/3]*Z)/1210689028125  |\n| $\\langle 31\\vert \\hat{v} \\vert 11\\rangle$ | = | (1269*Sqrt[3]*Z)/50000                  |\n| $\\langle 31\\vert \\hat{v} \\vert 12\\rangle$ | = | (110592*Sqrt[6]*Z)/24137569             |\n| $\\langle 31\\vert \\hat{v} \\vert 13\\rangle$ | = | (189*Z)/32768                           |\n| $\\langle 31\\vert \\hat{v} \\vert 21\\rangle$ | = | (1555918848*Sqrt[6]*Z)/75429903125      |\n| $\\langle 31\\vert \\hat{v} \\vert 22\\rangle$ | = | (2160*Sqrt[3]*Z)/823543                 |\n| $\\langle 31\\vert \\hat{v} \\vert 23\\rangle$ | = | (1216512*Sqrt[2]*Z)/815730721           |\n| $\\langle 31\\vert \\hat{v} \\vert 31\\rangle$ | = | (815*Z)/8192                            |\n| $\\langle 31\\vert \\hat{v} \\vert 32\\rangle$ | = | (37826560*Sqrt[2]*Z)/22024729467        |\n| $\\langle 31\\vert \\hat{v} \\vert 33\\rangle$ | = | (617*Z)/(314928*Sqrt[3])                |\n| $\\langle 32\\vert \\hat{v} \\vert 11\\rangle$ | = | (110592*Sqrt[6]*Z)/24137569             |\n| $\\langle 32\\vert \\hat{v} \\vert 12\\rangle$ | = | (29943*Sqrt[3]*Z)/13176688              |\n| $\\langle 32\\vert \\hat{v} \\vert 13\\rangle$ | = | (1216512*Sqrt[2]*Z)/815730721           |\n| $\\langle 32\\vert \\hat{v} \\vert 21\\rangle$ | = | (2160*Sqrt[3]*Z)/823543                 |\n| $\\langle 32\\vert \\hat{v} \\vert 22\\rangle$ | = | (5870679552*Sqrt[6]*Z)/669871503125     |\n| $\\langle 32\\vert \\hat{v} \\vert 23\\rangle$ | = | (73008*Z)/9765625                       |\n| $\\langle 32\\vert \\hat{v} \\vert 31\\rangle$ | = | (37826560*Sqrt[2]*Z)/22024729467        |\n| $\\langle 32\\vert \\hat{v} \\vert 32\\rangle$ | = | (32857*Z)/390625                        |\n| $\\langle 32\\vert \\hat{v} \\vert 33\\rangle$ | = | (6890942464*Sqrt[2/3]*Z)/1210689028125  |\n| $\\langle 33\\vert \\hat{v} \\vert 11\\rangle$ | = | (189*Z)/32768                           |\n| $\\langle 33\\vert \\hat{v} \\vert 12\\rangle$ | = | (1216512*Sqrt[2]*Z)/815730721           |\n| $\\langle 33\\vert \\hat{v} \\vert 13\\rangle$ | = | (617*Z)/(314928*Sqrt[3])                |\n| $\\langle 33\\vert \\hat{v} \\vert 21\\rangle$ | = | (1216512*Sqrt[2]*Z)/815730721           |\n| $\\langle 33\\vert \\hat{v} \\vert 22\\rangle$ | = | (73008*Z)/9765625                       |\n| $\\langle 33\\vert \\hat{v} \\vert 23\\rangle$ | = | (6890942464*Sqrt[2/3]*Z)/1210689028125  |\n| $\\langle 33\\vert \\hat{v} \\vert 31\\rangle$ | = | (617*Z)/(314928*Sqrt[3])                |\n| $\\langle 33\\vert \\hat{v} \\vert 32\\rangle$ | = | (6890942464*Sqrt[2/3]*Z)/1210689028125  |\n| $\\langle 33\\vert \\hat{v} \\vert 33\\rangle$ | = | (17*Z)/256                              |\n|------------------------------------------------------------------------------------|\n',
             'answer': '',
             'file': None,
             'hints': [],
             'solution': 'The following Python program set ups a simple Hartree-Fock program for solving the above problem, using as input the integrals listed at the end here.\n!bc pycod\n"""\nProgram for solving Hartree Fock iteratively.\n1. Import radial integral results\n2. Set up HF matrix using C = I as initial guess\n3. Solve eigenvalue problem using numpy.linalg\n4. Use resulting eigenvectors to assemble new HF matrix\n5. Repeat steps 3 and 4 until convergence is met.\n6. Calculate ground state energy from resulting C.\n"""\n\nfrom __future__ import division\nfrom sympy import *\nfrom numpy import *\nimport pickle, sys\n\nZ = Symbol("Z")\n\nclass HF:\n    """\n    Class for solving the Hartree Fock equations iteratively.\n    """\n\n    def __init__(self, N, basis, Z_value, first_C=\'identity\'):\n        """\n        N is the number of particles in the system and basis\n        is the single-particle basis for the system.\n        """\n        # Read in the radial_integrals from pickled object\n        with open("radial_integrals.p", "rb") as infile:\n            self.radial_integrals = pickle.load(infile)\n        \n        self.N = N # number of particles in the system\n        self.basis = basis # single-particle basis for the system\n        self.Z_value = Z_value # atomic number of the atom\n        self.n = len(basis) # number of single-particle basis states\n        self.ek = array((0,0,0,0,0,0)) # new single-particle energies\n        self.E = 0 # energy\n        # Set up the first coefficient matrix to be used\n        if first_C == \'identity\':\n            self.C = identity(self.n)\n        elif first_C == \'zero\':\n            self.C = zeros((self.n, self.n))\n        elif first_C == \'rand\':\n            self.C = random.rand(self.n, self.n)\n        else:\n            print "first_C argument not understood"\n            print "Legal values are: \'identity\', \'zero\', \'rand\'"\n            sys.exit(1)\n\n        self.h_HF = zeros((self.n, self.n))\n        self.assemble_HF_matrix() # set up HF matrix for C = I\n\n    def h_0(self, p, q):\n        """\n        Takes the integer values of states and returns the \n        asymmetrized twobody matrix element <pq||rs>.\n        """\n        n1, s1 = self.basis[p]\n        n2, s2 = self.basis[q]\n\n        if n1 != n2 or s1 != s2:\n            return 0\n        else:\n            return -Z**2/(2*n1**2)\n\n    def rad(self, n1, n2, n3, n4):\n        """\n        Returns the radial integral <n1, n2|v|n3, n4>.\n        """\n        return self.radial_integrals[n1-1, n2-1, n3-1, n4-1]\n\n    def h_1(self, p, q, r, s):\n        """\n        Takes the integer values of four basis-states and returns\n        the asymmetrized twobody matrix element <pq||rs>.\n        """\n        n1, s1 = self.basis[p]\n        n2, s2 = self.basis[q]\n        n3, s3 = self.basis[r]\n        n4, s4 = self.basis[s]\n\n        if s1 == s2 == s3 == s4:\n            return self.rad(n1, n2, n3, n4) - self.rad(n1, n2, n4, n3)\n        if s1 == s3 and s2 == s4:\n            return self.rad(n1, n2, n3, n4)\n        if s1 == s4 and s2 == s3:\n            return -self.rad(n1, n2, n4, n3)\n        else:\n            return 0\n\n    def assemble_HF_matrix(self):\n        """\n        Assemble the HF matric from the coefficient matrix.\n        """\n        n, N = self.n, self.N\n        C = self.C\n\n        for a in range(n):\n            for g in range(n):\n                s = self.h_0(a,g)\n                for p in range(N):\n                    for b in range(n):\n                        for d in range(n):\n                            s += C[p,b]*C[p,d]*self.h_1(a,b,g,d)\n\n                self.h_HF[a,g] = s.subs(Z, self.Z_value)\n\n    def reorder_coefficients(self):\n        ek, C = self.ek, self.C\n\n        # Sort eigenvalues and coefficient matrix using numpy.argsort\n        indices = argsort(ek)        \n        ek = ek[indices]\n        C = C[:, indices]\n\n        self.ek, self.C = ek, C.T\n\n    def calc_energy(self):\n        """\n        Calculates the ground state energy from the \n        current coefficient matric.\n        """\n        n, N = self.n, self.N\n        C = self.C\n\n        e = 0\n        for p in range(N):\n         for a in range(n):\n           for b in range(n):\n             e += C[p,a]*C[p,b]*self.h_0(a,b)\n             for q in range(N):\n              for c in range(n):\n               for d in range(n):\n                e += 0.5*C[p,a]*C[q,b]*C[p,c]*C[q,d]*self.h_1(a,b,c,d)\n\n        self.E = e.subs(Z, Z_value).evalf()\n        return self.E\n\n    def solve(self, tol=1e-6, max_iters=40):\n        iterations = 0\n        n, N = self.n, self.N\n        Ep = 0\n        ekp = array((0,0,0,0,0,0))\n\n        while iterations < max_iters:\n            iterations +=1\n\n            # Find eigenvalues and eigenvector of HF matrix\n            self.ek, self.C = linalg.eig(self.h_HF)\n            \n            # Reorder eigenvalues and eigenvector\n            self.reorder_coefficients()\n\n            # Assemble the new HF matrix\n            self.assemble_HF_matrix()\n            \n            # Test tolerance of lowest eigenvalue\n            print self.calc_energy()\n            error = sum(abs(ekp - self.ek[0]))\n            if error < tol:\n                print "Solver converged after %d iterations." % (iterations)\n                return\n\n            Ep = self.E\n            ekp = self.ek[0]\n\n        print "Solver failed to converge in %d iterations." % (iterations)\n\n\nN = 4\nZ_value = 4\nbasis = [(1,1), (1,-1), (2,1), (2,-1), (3,1), (3,-1)]\n\nprint "Solving with initial guess C=I."\nsolver = HF(N, basis, Z_value, first_C=\'identity\')\nsolver.solve(max_iters=100)\n\nprint "\\n\\n\\n Solving with initial guess C=0."\nsolver = HF(N, basis, Z_value, first_C=\'zero\')\nsolver.solve(max_iters=100)\n\nprint "\\n\\n\\n Solving with random initial guess."\nsolver = HF(N, basis, Z_value, first_C=\'rand\')\nsolver.solve(max_iters=100)\n\n!ec',
             'text': 'The Hartree-Fock equations with a variation of the coefficients $C_{p\\alpha}$\nlead to an eigenvalue problem whose eigenvectors are the coefficients\n$C_{p\\alpha}$ and eigenvalues are the new single-particle energies. \nUse the single-particle orbits $1s-3s$ and set up the Hartree-Fock matrix for both the helium atom and the beryllium atom. Find after the first diagonalization the new single-particle energies and the new ground state energy.\nCompare these results with  those you obtained under the minimization of the ground states as functions of $Z$ and the full diagonalization. When setting up the Hartree-Fock matrix \nin the first iteration, our guess for the coefficients $C_{p\\beta}$ etc.~is $C_{p\\beta}=1$ for $p=\\beta$ and zero else. \nThe final stage is to \nset up an iterative scheme where you use the new wave functions\ndetermined via the coefficients $C_{p\\alpha}$ to solve iteratively the Hartree-Fock equations till a given self-consistency is reached. A typical way of doing this is to compare the single-particle energies from the previous iteration with those obtained from the new diagonalization. If the total difference is smaller than a prefixed value, the iterative process is stopped. \n\nCompare these results with the those you obtained under the minimization of the ground states as functions of $Z$ and the full diagonalization. Discuss your results.'}],
  'text': 'In this exercise we will develop two simple models for studying the \nhelium atom (with two electrons) and the beryllium atom with four electrons.\nThe reason why we chose these systems is simply due to the fact that we can use\nhydrogen-like single-particle state functions. These functions allow for simple evaluations of the two-body integrals needed in a Hartree-Fock calculation. \nIn most cases, these integrals have a simple closed form solution, as indicated in the table below.\n\nAfter having introduced the  Born-Oppenheimer approximation which effectively freezes out the nucleonic degrees\nof freedom, the Hamiltonian for $N$ electrons takes the following form \n!bt\n\\[\n  \\hat{H} = \\sum_{i=1}^{N} t(x_i) \n  - \\sum_{i=1}^{N} k\\frac{Ze^2}{r_i} + \\sum_{i<j}^{N} \\frac{ke^2}{r_{ij}},\n\\]\n\n!et\nwith $k=1.44$ eVnm. Througout this work we will use atomic units, this means\nthat $\\hbar=c=e=m_e=1$. The constant $k$ becomes also equal 1. \nThe resulting energies have to be multiplied by $2\\times 13.6$ eV\nin order to obtain energies in eletronvolts.\n\n We can rewrite our Hamiltonians as\n!bt\n\\[\n    \\hat{H} = \\hat{H_0} + \\hat{H_I} \n    = \\sum_{i=1}^{N}\\hat{h}_0(x_i) + \\sum_{i < j}^{N}\\frac{1}{r_{ij}},\n\\]\n\n!et\nwhere  we have defined $r_{ij}=| {\\bf r}_i-{\\bf r}_j|$ and\n$\\hat{h}_0(x_i) =  \\hat{t}(x_i) - \\frac{Z}{r_i}$\nThe variable $x$ contains both the spatial coordinates and the spin values.\nThe first term of the previous equation, $H_0$, is the sum of the $N$ *one-body* Hamiltonians $\\hat{h}_0$. Each individual\nHamiltonian $\\hat{h}_0$ contains the kinetic energy operator of an\nelectron and its potential energy due to the attraction of the\nnucleus. The second term, $H_I$, is the sum of the $N(N-1)/2$\ntwo-body interactions between each pair of electrons. Note that the double sum carries a restriction $i<j$.\n\nAs basis functions for our calculations we will use hydrogen-like single-particle functions.  This means the onebody operator is diagonal in this basis for states $i,j$ with quantum numbers $nlm_lsm_s$ with  \nenergies \n!bt\n\\[\\langle i|\\hat{h}_0| j\\rangle =  -Z^2/2n^2\\delta_{i,j}.\n\\]  \n\n!et\nThe quantum number $n$ refers to the number of nodes \nof the wave function.  Observe that this expectation value is independent of spin.\n\nWe will in all calculations here restrict ourselves to only so-called $s$ -waves,\nthat is the orbital momentum $l$ is zero. We will also limit the quantum number $n$ to $n\\le 3$.  It means that every $ns$ state can accomodate two electrons due to the spin degeneracy. \nIn the calculations you \nwill need the Coulomb interaction with matrix elements\ninvolving single-particle wave functions with $l=0$ only, the so-called $s$-waves.\nWe need only the radial part since the \nspherical harmonics for the $s$-waves are rather simple. We omit single-particle states with $l> 0$.\nOur radial part of the wave functions are\n!bt\n\\[\nR_{n0}(r)=\\left(\\frac{2Z}{n}\\right)^{3/2}\\sqrt{\\frac{(n-1)!}{2n\\times n!}}L_{n-1}^1(\\frac{2Zr}{n})\\exp{(-\\frac{Zr}{n})},\n\\]\n\n!et\nwhere $L_{n-1}^1(r)$ are the so-called Laguerre polynomials.\nThese wave functions can then be used to compute the direct part of the\nCoulomb interaction\n!bt\n\\[\n\\langle \\alpha\\beta| V| \\gamma\\delta\\rangle = \\int r_1^2dr_1 \\int r_2^2dr_2R_{n_{\\alpha}0}^*(r_1) R_{n_{\\beta}0}^*(r_2) \n  \\frac{1}{| {\\bf r}_1-{\\bf r}_2|}R_{n_{\\gamma}0}(r_1)R_{n_{\\delta}0}(r_2)\n\\]\n\n!et\nObserve that this is only the radial integral and that the labels $\\alpha\\beta\\gamma\\delta$ refer only to the quantum numbers $nlm_l$, with $m_l$ the projection of the orbital momentum $l$. \nA similar expression can be found for the exchange part. Since we have restricted ourselves to only $s$-waves, these integrals are straightforward but tedious to calculate. As an addendum to this project we list all closed-form expressions for the relevant matrix elements. Note well that these matrix elements do not include spin. When setting up the final antisymmetrized matrix elements you need to consider the spin degrees of freedom as well. Please pay in particular special attention to the exchange part and the pertinent spin values of the single-particle states.\n\n\nWe will also, for both helium and beryllium assume that the many-particle states we construct have always the same total spin projection $M_S=0$. This means that if we excite one or two particles from the ground state, the spins of the various single-particle states should always sum up to zero.',
  'title': 'Hartree-Fock calculations in atomic physics',
  'type': 'Exercise',
  'type_visible': True}]